kind: pipeline
name: default

steps:
  - name: config
    image: node:lts-alpine
    pull: if-not-exists
    environment:
      CI_DOMAIN:
        from_secret: CI_DOMAIN
      NPM_AUTH_TOKEN:
        from_secret: NPM_AUTH_TOKEN
    commands:
      - echo "//$CI_DOMAIN/repository/npm/:_authToken=$NPM_AUTH_TOKEN" > .npmrc
      - echo "//$CI_DOMAIN/repository/npm-publish/:_authToken=$NPM_AUTH_TOKEN" >> .npmrc
      - echo "registry=https://$CI_DOMAIN/repository/npm" >> .npmrc
      - echo "always-auth=true" >> .npmrc

  - name: build
    image: node:lts-alpine
    pull: if-not-exists
    commands:
      - yarn
      - yarn build

  - name: publish
    image: plugins/docker:18.09
    pull: if-not-exists
    settings:
      repo: docker-registry.enterprise-ui.com/enterpriseui/exampleapp-api
      username: ci
      password:
        from_secret: DOCKER_AUTH_PASS
      registry: docker-registry.enterprise-ui.com
      tag: ${DRONE_TAG}
    when:
      ref:
      - refs/head/master
      - refs/tags/*
      event:
      - tag

  - name: deploy
    image: dtzar/helm-kubectl:3.2.0
    pull: if-not-exists
    environment:
      KUBE_CFG:
        from_secret: KUBE_CFG
      ROOT_DOMAIN:
        from_secret: ROOT_DOMAIN
    commands:
      - echo $KUBE_CFG | base64 -d > kubeconfig.yaml
      - export KUBECONFIG=$(pwd)/kubeconfig.yaml
      - export DOMAIN=api.exampleapp.$ROOT_DOMAIN
      - export REGISTRY_DOMAIN=docker-registry.$ROOT_DOMAIN
      - echo $DOMAIN
      - |
        helm upgrade --install exampleapp-api .chart \
        --namespace exampleapp-api \
        --set image.tag=$DRONE_TAG \
        --set image.repository=$REGISTRY_DOMAIN/enterpriseui/exampleapp-api \
        --set ingress.enabled=true \
        --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
        --set ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"=100m \
        --set ingress.annotations."cert-manager\.io\/cluster-issuer"="letsencrypt-prod" \
        --set ingress.hosts[0]=$DOMAIN \
        --set ingress.tls[0].hosts[0]=$DOMAIN \
        --set ingress.tls[0].secretName=$DOMAIN-tls   
    when:
      ref:
      - refs/head/master
      - refs/tags/*
      event:
      - tag